import Vue from 'vue'
import Router from 'vue-router'
import { normalizeURL, decode } from 'ufo'
import { interopDefault } from './utils'
import scrollBehavior from './router.scrollBehavior.js'

const _391f21c6 = () => interopDefault(import('../../../pages/edit/index.vue' /* webpackChunkName: "pages/edit/index" */))
const _11e72212 = () => interopDefault(import('../../../pages/edit/confirmRegister.vue' /* webpackChunkName: "pages/edit/confirmRegister" */))
const _35eb1dae = () => interopDefault(import('../../../pages/edit/intervenants/index.vue' /* webpackChunkName: "pages/edit/intervenants/index" */))
const _02b026d1 = () => interopDefault(import('../../../pages/edit/interviews/index.vue' /* webpackChunkName: "pages/edit/interviews/index" */))
const _02c6c4dd = () => interopDefault(import('../../../pages/edit/login.vue' /* webpackChunkName: "pages/edit/login" */))
const _4ec591d0 = () => interopDefault(import('../../../pages/edit/playlists/index.vue' /* webpackChunkName: "pages/edit/playlists/index" */))
const _516f6a42 = () => interopDefault(import('../../../pages/edit/register.vue' /* webpackChunkName: "pages/edit/register" */))
const _c2b90404 = () => interopDefault(import('../../../pages/edit/resetPassword.vue' /* webpackChunkName: "pages/edit/resetPassword" */))
const _46b69ba2 = () => interopDefault(import('../../../pages/edit/settings/index.vue' /* webpackChunkName: "pages/edit/settings/index" */))
const _5b0f957f = () => interopDefault(import('../../../pages/edit/users/index.vue' /* webpackChunkName: "pages/edit/users/index" */))
const _407e4998 = () => interopDefault(import('../../../pages/edit/intervenants/form.vue' /* webpackChunkName: "pages/edit/intervenants/form" */))
const _ab9bdfd6 = () => interopDefault(import('../../../pages/edit/interviews/form.vue' /* webpackChunkName: "pages/edit/interviews/form" */))
const _f0634a24 = () => interopDefault(import('../../../pages/edit/playlists/form.vue' /* webpackChunkName: "pages/edit/playlists/form" */))
const _49f313a7 = () => interopDefault(import('../../../pages/edit/users/form.vue' /* webpackChunkName: "pages/edit/users/form" */))
const _162be0a9 = () => interopDefault(import('../../../pages/index.vue' /* webpackChunkName: "pages/index" */))

const emptyFn = () => {}

Vue.use(Router)

export const routerOptions = {
  mode: 'history',
  base: '/',
  linkActiveClass: 'nuxt-link-active',
  linkExactActiveClass: 'nuxt-link-exact-active',
  scrollBehavior,

  routes: [{
    path: "/edit",
    component: _391f21c6,
    name: "edit"
  }, {
    path: "/edit/confirmRegister",
    component: _11e72212,
    name: "edit-confirmRegister"
  }, {
    path: "/edit/intervenants",
    component: _35eb1dae,
    name: "edit-intervenants"
  }, {
    path: "/edit/interviews",
    component: _02b026d1,
    name: "edit-interviews"
  }, {
    path: "/edit/login",
    component: _02c6c4dd,
    name: "edit-login"
  }, {
    path: "/edit/playlists",
    component: _4ec591d0,
    name: "edit-playlists"
  }, {
    path: "/edit/register",
    component: _516f6a42,
    name: "edit-register"
  }, {
    path: "/edit/resetPassword",
    component: _c2b90404,
    name: "edit-resetPassword"
  }, {
    path: "/edit/settings",
    component: _46b69ba2,
    name: "edit-settings"
  }, {
    path: "/edit/users",
    component: _5b0f957f,
    name: "edit-users"
  }, {
    path: "/edit/intervenants/form",
    component: _407e4998,
    name: "edit-intervenants-form"
  }, {
    path: "/edit/interviews/form",
    component: _ab9bdfd6,
    name: "edit-interviews-form"
  }, {
    path: "/edit/playlists/form",
    component: _f0634a24,
    name: "edit-playlists-form"
  }, {
    path: "/edit/users/form",
    component: _49f313a7,
    name: "edit-users-form"
  }, {
    path: "/",
    component: _162be0a9,
    name: "index"
  }],

  fallback: false
}

export function createRouter (ssrContext, config) {
  const base = (config._app && config._app.basePath) || routerOptions.base
  const router = new Router({ ...routerOptions, base  })

  // TODO: remove in Nuxt 3
  const originalPush = router.push
  router.push = function push (location, onComplete = emptyFn, onAbort) {
    return originalPush.call(this, location, onComplete, onAbort)
  }

  const resolve = router.resolve.bind(router)
  router.resolve = (to, current, append) => {
    if (typeof to === 'string') {
      to = normalizeURL(to)
    }
    return resolve(to, current, append)
  }

  return router
}

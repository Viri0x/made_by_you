exports.ids = [10];
exports.modules = {

/***/ 57:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@nuxt/components/dist/loader.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./components/upload.vue?vue&type=template&id=5f3b5fe4&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.cible_class},[_vm._ssrNode("<div"+(_vm._ssrClass("justify-between align-center",_vm.flexIsFile))+"><label>"+_vm._ssrEscape(_vm._s(_vm.titre_file))+"</label> <div class=\"previewUpload pb-1 flex items-center justify-center\"><div class=\"flex items-center justify-center text-sm w-1/2\">"+(_vm._s(_vm.preview))+"</div></div></div> <label class=\"uploadZone bt-upload\"><span class=\"leading-normal\">"+_vm._ssrEscape(_vm._s(_vm.label_file))+"</span> <input type=\"file\" id=\"file\""+(_vm._ssrAttr("accept",_vm.accept_file))+" class=\"hidden\"></label> <div class=\"progress hidden\"><div class=\"progress-title\">"+_vm._ssrEscape(_vm._s(_vm.uploadPercentage)+"%")+"</div> <div class=\"progress-bar\""+(_vm._ssrStyle(null,{ width: _vm.uploadPercentage + '%' }, null))+"></div></div>")])}
var staticRenderFns = []


// CONCATENATED MODULE: ./components/upload.vue?vue&type=template&id=5f3b5fe4&

// EXTERNAL MODULE: external "vuex"
var external_vuex_ = __webpack_require__(3);

// EXTERNAL MODULE: external "axios"
var external_axios_ = __webpack_require__(4);
var external_axios_default = /*#__PURE__*/__webpack_require__.n(external_axios_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib??ref--2-0!./node_modules/@nuxt/components/dist/loader.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./components/upload.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ var uploadvue_type_script_lang_js_ = ({
  name: 'edit-upload',
  layout: 'edit',
  middleware: 'auth',
  computed: { ...Object(external_vuex_["mapGetters"])(['isAuthenticated', 'loggedInUser'])
  },

  created() {},

  mounted() {
    this.getPreview(this.value_file);
  },

  data() {
    return {
      url_server: this.$store.state.url_server,
      titre_file: this.upload_titre_file,
      label_file: this.upload_label_file,
      accept_file: this.upload_accept_file,
      value_file: this.upload_value_file,
      cible_class: this.upload_cible,
      cible: '.' + this.upload_cible + ' ',
      uploadPercentage: 0,
      file: '',
      preview: '',
      flexIsFile: ''
    };
  },

  props: {
    upload_titre_file: String,
    upload_label_file: String,
    upload_accept_file: String,
    upload_value_file: String,
    upload_cible: String
  },
  emits: ['update:specimen_file'],
  methods: {
    handleFileUpload(e) {
      this.hideErreur();
      var element = e.currentTarget;
      this.fileId = element.id;
      this.file = element.files[0];

      if (this.file != '') {
        this.submitFile();
      }
    },

    submitFile() {
      //this.uploadErreur = '';
      this.uploadPercentage = 0;
      let formData = new FormData();
      formData.append('file', this.file);
      document.querySelector(this.cible + ".progress").classList.remove('hidden');
      document.querySelector(this.cible + ".uploadZone").classList.add('hidden');
      document.getElementById("file").disabled = true;
      external_axios_default.a.post(this.url_server + '/uploadFile', formData, {
        headers: {
          'Content-Type': 'multipart/form-data'
        },
        onUploadProgress: function (progressEvent) {
          var val = parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total));
          document.querySelector(this.cible + ".progress-title").innerHTML = val + '%';
          this.uploadPercentage = val;
        }.bind(this)
      }).then(response => {
        var isOptimize = response.data.isOptimize;
        document.querySelector('#file').value = '';
        this.value_file = response.data.optimizeFile[0];
        this.$emit("input", response.data.optimizeFile[0]);

        if (isOptimize) {
          document.querySelector(this.cible + ".progress-title").innerHTML = 'media optimization...'; //document.querySelector(this.cible + ".progress-stop").classList.add('hidden')

          this.uploadPercentage = 0;
          setTimeout(function () {
            external_axios_default.a.get(this.url_server + "/optimizeFile?fichier=" + this.value_file).then(response => {
              document.querySelector(this.cible + ".progress-title").innerHTML = 'media optimization...';
              this.getPreview();
            }).catch(error => displayErreur("erreur lors de l'optimisation"));
          }.bind(this), 2000);
        } else this.getPreview();
      }).catch(err => {
        if (typeof err.response.data.message === 'undefined') displayErreur(err.response.data.message);else displayErreur(err.response.data.message);
        document.querySelector(this.cible + ".progress").classList.add('hidden');
        document.querySelector(this.cible + ".uploadZone").classList.remove('hidden');
        document.getElementById("file").disabled = false;
      });
    },

    getPreview: function () {
      document.querySelector(this.cible + ".progress-title").innerHTML = ''; //document.querySelector(this.cible + ".progress-stop").classList.remove('hidden')

      document.querySelector(this.cible + ".progress").classList.add('hidden');
      document.querySelector(this.cible + ".uploadZone").classList.remove('hidden');
      document.getElementById("file").disabled = false;
      var preview = '';
      var file = this.value_file;

      if (this.value_file != '') {
        console.log("file : " + this.value_file);
        var ext = file.toLowerCase().split(".").pop();

        switch (ext) {
          case "mp4":
            preview = '<video width="100%" height="auto" controls><source src="/upload/' + file + '" type="video/mp4"></video>';
            break;

          case "mp3":
            preview = '<audio controls><source src="/upload/' + file + '" type="audio/mpeg"></audio>';
            break;

          case "jpg":
          case "jpeg":
          case "gif":
          case "png":
            preview = '<img class="w-20" src="/upload/' + file + '" />';
            break;

          default:
            preview = '<a class="flex" target="blank" href="/upload/' + file + '"><svg xmlns="http://www.w3.org/2000/svg" class="pr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" /><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" /></svg> preview file</a>';
            this.flexIsFile = 'flex ';
        }

        this.preview = preview;
      }
    },
    hideErreur: function () {
      hideErreur();
    }
  }
});
// CONCATENATED MODULE: ./components/upload.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_uploadvue_type_script_lang_js_ = (uploadvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(2);

// CONCATENATED MODULE: ./components/upload.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  components_uploadvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  "47cc2521"
  
)

/* harmony default export */ var upload = __webpack_exports__["default"] = (component.exports);

/***/ })

};;
//# sourceMappingURL=upload.js.map